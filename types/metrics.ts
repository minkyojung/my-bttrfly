/**
 * Voice Chat Metrics Types
 *
 * Comprehensive metrics for tracking performance, quality, usage, and costs
 * of the voice chat system.
 */

export interface PerformanceMetrics {
  // Time measurements in milliseconds
  sttDuration: number;              // Speech-to-Text processing time
  ragSearchDuration: number;        // RAG document search time
  ragRerankDuration: number;        // Cohere rerank time (if used)
  llmDuration: number;              // LLM response generation time
  normalizationDuration: number;    // Text normalization time
  ttsDuration: number;              // Text-to-Speech synthesis time
  totalDuration: number;            // Total end-to-end time

  // Target benchmarks (for comparison)
  targets?: {
    sttDuration: 1000;              // <1s
    ragSearchDuration: 1500;        // <1.5s
    llmDuration: 1500;              // <1.5s
    ttsDuration: 2000;              // <2s
    totalDuration: 5000;            // <5s
  };
}

export interface QualityMetrics {
  // Input quality
  transcriptionLength: number;      // User input length (characters)
  transcriptionLanguage: string;    // Detected language

  // Output quality
  responseLength: number;           // Response text length (characters)
  responseSentences: number;        // Number of sentences in response

  // Normalization changes
  normalizationChanges: {
    citationsRemoved: number;
    markdownRemoved: number;
    fillersAdded: number;
    sentencesSplit: number;
  };

  // RAG quality
  documentsFound: number;           // Number of documents retrieved
  documentsUsed: number;            // Number of documents after reranking
  avgSimilarity: number;            // Average similarity score
}

export interface UsageMetrics {
  sessionId: string;                // Unique session identifier
  timestamp: Date;                  // Request timestamp
  userId?: string;                  // User ID (optional, for tracking)

  // Cost estimation
  costEstimate: {
    stt: number;                    // STT cost ($0.003/min)
    tts: number;                    // TTS cost ($0.03/min)
    llm: number;                    // LLM cost (based on tokens)
    total: number;                  // Total cost
  };
}

export interface ErrorMetrics {
  hasError: boolean;
  errorStage?: 'stt' | 'rag' | 'llm' | 'normalization' | 'tts';
  errorMessage?: string;
  errorCode?: string;
}

/**
 * Complete voice chat metrics
 */
export interface VoiceMetrics {
  // Basic info
  id?: string;                      // Database ID (generated by Supabase)
  sessionId: string;
  timestamp: Date;
  userId?: string;

  // Performance
  performance: PerformanceMetrics;

  // Quality
  quality: QualityMetrics;

  // Cost
  cost: {
    stt: number;
    tts: number;
    llm: number;
    total: number;
  };

  // Error tracking
  error?: ErrorMetrics;

  // Optional: Full text (privacy-sensitive)
  transcriptionText?: string;
  responseText?: string;
  normalizedText?: string;
}

/**
 * Aggregated statistics for dashboard
 */
export interface MetricsStats {
  total: number;                    // Total number of sessions

  // Average performance
  avgPerformance: {
    stt: number;
    rag: number;
    llm: number;
    tts: number;
    total: number;
  };

  // Performance percentiles
  p50Performance: {
    total: number;
  };
  p95Performance: {
    total: number;
  };

  // Average quality
  avgQuality: {
    responseLength: number;
    responseSentences: number;
    citationsRemoved: number;
    fillersAdded: number;
    documentsUsed: number;
  };

  // Total cost
  totalCost: number;
  avgCostPerSession: number;

  // Error rate
  errorRate: number;                // Percentage of failed sessions

  // Time-series data
  byTime?: Array<{
    timestamp: string;
    count: number;
    avgDuration: number;
    errorCount: number;
  }>;
}

/**
 * Metrics query parameters
 */
export interface MetricsQuery {
  timeRange: '1h' | '24h' | '7d' | '30d' | 'all';
  groupBy?: 'hour' | 'day' | 'week';
  userId?: string;
  hasError?: boolean;
  minDuration?: number;
  maxDuration?: number;
}

/**
 * Database record format (matches Supabase schema)
 */
export interface VoiceMetricsRecord {
  id: string;
  session_id: string;
  timestamp: string;                // ISO timestamp
  user_id?: string;

  // Performance (milliseconds)
  stt_duration: number;
  rag_search_duration: number;
  rag_rerank_duration: number;
  llm_duration: number;
  normalization_duration: number;
  tts_duration: number;
  total_duration: number;

  // Quality
  transcription_length: number;
  transcription_text?: string;
  response_length: number;
  response_text?: string;
  normalized_text?: string;
  response_sentences: number;

  // Normalization metrics
  citations_removed: number;
  markdown_removed: number;
  fillers_added: number;

  // RAG metrics
  documents_found: number;
  documents_used: number;
  avg_similarity: number;

  // Cost (USD)
  cost_stt: number;
  cost_tts: number;
  cost_llm: number;
  cost_total: number;

  // Error tracking
  has_error: boolean;
  error_stage?: string;
  error_message?: string;

  created_at: string;               // ISO timestamp
}
